/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet, AbstractAddress } from 'fuels';
import { Interface, Contract } from 'fuels';
import type { RouterContractAbi, RouterContractAbiInterface } from '../RouterContractAbi';
const _abi = [
  {
    type: 'function',
    name: 'add_liquidity',
    inputs: [
      {
        type: 'b256',
        name: 'pool',
      },
      {
        type: 'u64',
        name: 'amount_a_desired',
      },
      {
        type: 'u64',
        name: 'amount_b_desired',
      },
      {
        type: 'u64',
        name: 'amount_a_min',
      },
      {
        type: 'u64',
        name: 'amount_b_min',
      },
      {
        type: 'enum Identity',
        name: 'recipient',
        components: [
          {
            type: 'struct Address',
            name: 'Address',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
          {
            type: 'struct ContractId',
            name: 'ContractId',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        type: 'struct AddLiquidityOutput',
        name: '',
        components: [
          {
            type: 'u64',
            name: 'amount_a',
          },
          {
            type: 'u64',
            name: 'amount_b',
          },
          {
            type: 'u64',
            name: 'liquidity',
          },
        ],
      },
    ],
  },
  {
    type: 'function',
    name: 'swap_exact_input',
    inputs: [
      {
        type: 'b256',
        name: 'pool',
      },
      {
        type: 'u64',
        name: 'min_amount_out',
      },
      {
        type: 'enum Identity',
        name: 'recipient',
        components: [
          {
            type: 'struct Address',
            name: 'Address',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
          {
            type: 'struct ContractId',
            name: 'ContractId',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        type: 'struct SwapOutput',
        name: '',
        components: [
          {
            type: 'u64',
            name: 'input_amount',
          },
          {
            type: 'u64',
            name: 'output_amount',
          },
        ],
      },
    ],
  },
  {
    type: 'function',
    name: 'swap_exact_output',
    inputs: [
      {
        type: 'b256',
        name: 'pool',
      },
      {
        type: 'u64',
        name: 'amount_out',
      },
      {
        type: 'u64',
        name: 'max_amount_in',
      },
      {
        type: 'enum Identity',
        name: 'recipient',
        components: [
          {
            type: 'struct Address',
            name: 'Address',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
          {
            type: 'struct ContractId',
            name: 'ContractId',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        type: 'struct SwapOutput',
        name: '',
        components: [
          {
            type: 'u64',
            name: 'input_amount',
          },
          {
            type: 'u64',
            name: 'output_amount',
          },
        ],
      },
    ],
  },
  {
    type: 'function',
    name: 'swap_exact_input_multihop',
    inputs: [
      {
        type: 'struct Vec',
        name: 'pools',
        typeArguments: [
          {
            type: 'b256',
            name: '',
          },
        ],
        components: [
          {
            type: 'struct RawVec',
            name: 'buf',
            typeArguments: [
              {
                type: 'b256',
                name: '',
              },
            ],
            components: [
              {
                type: 'u64',
                name: 'ptr',
              },
              {
                type: 'u64',
                name: 'cap',
              },
            ],
          },
          {
            type: 'u64',
            name: 'len',
          },
        ],
      },
      {
        type: 'u64',
        name: 'min_amount_out',
      },
      {
        type: 'enum Identity',
        name: 'recipient',
        components: [
          {
            type: 'struct Address',
            name: 'Address',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
          {
            type: 'struct ContractId',
            name: 'ContractId',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        type: 'struct SwapOutput',
        name: '',
        components: [
          {
            type: 'u64',
            name: 'input_amount',
          },
          {
            type: 'u64',
            name: 'output_amount',
          },
        ],
      },
    ],
  },
  {
    type: 'function',
    name: 'swap_exact_output_multihop',
    inputs: [
      {
        type: 'struct Vec',
        name: 'pools',
        typeArguments: [
          {
            type: 'b256',
            name: '',
          },
        ],
        components: [
          {
            type: 'struct RawVec',
            name: 'buf',
            typeArguments: [
              {
                type: 'b256',
                name: '',
              },
            ],
            components: [
              {
                type: 'u64',
                name: 'ptr',
              },
              {
                type: 'u64',
                name: 'cap',
              },
            ],
          },
          {
            type: 'u64',
            name: 'len',
          },
        ],
      },
      {
        type: 'u64',
        name: 'amount_out',
      },
      {
        type: 'u64',
        name: 'max_amount_in',
      },
      {
        type: 'enum Identity',
        name: 'recipient',
        components: [
          {
            type: 'struct Address',
            name: 'Address',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
          {
            type: 'struct ContractId',
            name: 'ContractId',
            components: [
              {
                type: 'b256',
                name: 'value',
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        type: 'struct SwapOutput',
        name: '',
        components: [
          {
            type: 'u64',
            name: 'input_amount',
          },
          {
            type: 'u64',
            name: 'output_amount',
          },
        ],
      },
    ],
  },
  {
    type: 'function',
    name: 'null',
    inputs: [],
    outputs: [
      {
        type: '()',
        name: '',
        components: [],
      },
    ],
  },
];

export class RouterContractAbi__factory {
  static readonly abi = _abi;
  static createInterface(): RouterContractAbiInterface {
    return new Interface(_abi) as unknown as RouterContractAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: Wallet | Provider
  ): RouterContractAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as RouterContractAbi;
  }
}
