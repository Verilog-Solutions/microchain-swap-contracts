/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from 'fuels';

import type { Enum, Option } from './common';

export type PoolInfoInput = {
  token_0_reserve: BigNumberish;
  token_1_reserve: BigNumberish;
  lp_token_supply: BigNumberish;
};

export type PoolInfoOutput = {
  token_0_reserve: BN;
  token_1_reserve: BN;
  lp_token_supply: BN;
};

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type RemoveLiquidityInfoInput = {
  token_0_amount: BigNumberish;
  token_1_amount: BigNumberish;
};

export type RemoveLiquidityInfoOutput = {
  token_0_amount: BN;
  token_1_amount: BN;
};

export type PreviewInfoInput = { amount: BigNumberish; has_liquidity: boolean };

export type PreviewInfoOutput = { amount: BN; has_liquidity: boolean };

export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;

export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;

interface ExchangeContractAbiInterface extends Interface {
  functions: {
    get_pool_info: FunctionFragment;
    get_add_liquidity_token_amount: FunctionFragment;
    add_liquidity: FunctionFragment;
    remove_liquidity: FunctionFragment;
    swap: FunctionFragment;
    get_tokens: FunctionFragment;
    get_swap_with_minimum: FunctionFragment;
    get_swap_with_maximum: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'get_pool_info', values?: undefined): Uint8Array;
  encodeFunctionData(
    functionFragment: 'get_add_liquidity_token_amount',
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(functionFragment: 'add_liquidity', values: [IdentityInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'remove_liquidity', values: [IdentityInput]): Uint8Array;
  encodeFunctionData(
    functionFragment: 'swap',
    values: [BigNumberish, BigNumberish, IdentityInput]
  ): Uint8Array;
  encodeFunctionData(functionFragment: 'get_tokens', values?: undefined): Uint8Array;
  encodeFunctionData(functionFragment: 'get_swap_with_minimum', values: [BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_swap_with_maximum', values: [BigNumberish]): Uint8Array;

  decodeFunctionData(functionFragment: 'get_pool_info', data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: 'get_add_liquidity_token_amount',
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: 'add_liquidity', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'remove_liquidity', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'swap', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_tokens', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_swap_with_minimum', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_swap_with_maximum', data: BytesLike): DecodedValue;
}

export class ExchangeContractAbi extends Contract {
  interface: ExchangeContractAbiInterface;
  functions: {
    get_pool_info: InvokeFunction<[], PoolInfoOutput>;

    get_add_liquidity_token_amount: InvokeFunction<[token_0_amount: BigNumberish], BN>;

    add_liquidity: InvokeFunction<[recipient: IdentityInput], BN>;

    remove_liquidity: InvokeFunction<[recipient: IdentityInput], RemoveLiquidityInfoOutput>;

    swap: InvokeFunction<
      [amount_0_out: BigNumberish, amount_1_out: BigNumberish, recipient: IdentityInput],
      void
    >;

    get_tokens: InvokeFunction<[], [string, string]>;

    get_swap_with_minimum: InvokeFunction<[amount: BigNumberish], PreviewInfoOutput>;

    get_swap_with_maximum: InvokeFunction<[amount: BigNumberish], PreviewInfoOutput>;
  };
}
